# Configuration file for the soupault website generator/HTML processor
# (see https://soupault.neocities.org/reference-manual/ for details).

[settings]
  doctype = "<!DOCTYPE html>"
  generator_mode = true

  default_template_file = "templates/main.html"

  # Content from site/index.md is inserted in the <main>
  # or templates/main.html
  default_content_selector = "main"

  verbose = true
  debug  = true

[preprocessors]
  # Convert *.md Markdown pages to HTML using cmark (with https://github.com/commonmark/cmark)
  # before further processing.
  #
  # You need cmark installed on your system for this to work.
  md = "cmark --unsafe --smart"

# Creates a table of contents from the page headings
# and inserts it in the element with id="sidebar" as per the selector and action options.
[widgets.toc]
  widget = "toc"

  selector = "#sidebar"
  action = "prepend_child"

  min_level = 2
  max_level = 3

  toc_list_class = "toc"
  toc_class_levels = false

  # Insert a link to the current section next to each heading for easy copying.
  # When ids are persistent, deep linking is not bad, it's great.
  heading_links = true
  heading_link_class = "here"
  heading_link_text = "# "

  # Use slugified <h*> tag content for the id
  # is a heading doesn't have an id attribute.
  #
  # If a heading does have an id, like <h2 id="ip-route">
  # that id is preserved and used in the ToC link.
  use_heading_slug = true

  # Wrap every sub-list in a <li>, as the HTML standard demands.
  valid_html = true

# Sets the page <title> to the content of its first <h1>
# to avoid duplication.
[widgets.set-title]
  widget = "title"
  selector = "h1"
  force = true

# This widget comes from plugins/collapsible-list.lua
#
# It converts nested <ul>/<ol> elements to a tree with foldable nodes
# using HTML5 <defails>/<summary> elements.
[widgets.toc-collapse]
  after = "toc"
  widget = "collapsible-list"
  collapsible_class = "collapsible"

# This widget comes from plugins/inline-assets.lua
#
# It inline all external assets, e.g.
# Converts <link rel="stylesheet"> to inline <style>
# and inlines images as Base64.
#
# This allows the generated page to be truly standalone,
# without sacrificing convenience of external files for development.
[widgets.inline-assets]
  widget = "inline-assets"
  delete_files = true
  inline_images = true

# This widget comes from plugins/git-timestamp.lua
#
# It retrieves the date when site/index.md was last modified
# from the git commit history.
[widgets.insert-timestamp-from-git]
  widget = "git-timestamp"
  timestamp_container_selector = "#last-modified"
  timestamp_format = '<time id="revision">%s</time>'
  git_date_format = "short"

  # Do not do anything if a page has a <time id="revision"> elements
  # created by hand.
  # Useful to avoid re-generating timestamp on non-essential mionr or technical edits.
  manual_timestamp_selector = "#revision"


# Having chunks of the page wrapped in <div> or some other block elements
# make styling a lot simpler.
# However, writing those wrapper elements by hand is annoying.
# That's where the plugin from plugins/wrap-sections.lua comes into play.
#
# Here it takes this:
#
# <h3>First heading</h3>
# <p>First paragraph</p>
# <h3>Second heading</h3>
# <p>First paragraph</p>
#
# and converts it to this:
#
# <div class="subsection">
#   <h3>First heading</h3>
#   <p>First paragraph</p>
# </div>
# <div class="subsection">
#  <h3>Second heading</h3>
# ...
[widgets.wrap-subsections]
  widget = "wrap-sections"

  selector = "main"

  wrapper_element = "div"

  level = 3

  class = "subsection"

# Same, but for the <h2> level
# One use for it is the different background color for even subsections of a section.
# Applying :nth-child(even) to subsections without wrapping them in section may create an awkward look
# when a previous section has an odd number of subsections: in that case it's the _first_ child
# that ends up colored differently.
# The only way to prevent that is to make all subsection elements children of a single parent.
[widgets.wrap-sections]
  #after = "wrap-subsections"
  widget = "wrap-sections"

  selector = "main"

  wrapper_element = "div"

  level = 2

  class = "section"

# goatcounter.com provides a privacy-respecting stats collection service
[widgets.add-goatcounter-script]
  # We probably don't want to inline this script since it's:
  # a) not required for the page functionality b) may be updated upstream
  after = "inline-assets"
  widget = 'insert_html'
  html = '<script data-goatcounter="https://dmbaturin.goatcounter.com/count" async="async" src="//gc.zgo.at/count.js"></script>'
  selector = 'body'
  action = 'append_child'
